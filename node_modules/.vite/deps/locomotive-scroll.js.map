{
  "version": 3,
  "sources": ["../../.pnpm/@rollup+plugin-typescript@11.1.6_rollup@4.14.3_tslib@2.6.2_typescript@5.4.5/node_modules/tslib/tslib.es6.js", "../../lenis/src/maths.js", "../../lenis/src/animate.js", "../../lenis/src/dimensions.js", "../../lenis/src/debounce.js", "../../lenis/src/emitter.js", "../../lenis/src/virtual-scroll.js", "../../lenis/src/index.ts", "../../locomotive-scroll/src/core/IO.ts", "../../locomotive-scroll/src/utils/maths.ts", "../../locomotive-scroll/src/core/ScrollElement.ts", "../../locomotive-scroll/src/core/Core.ts", "../../locomotive-scroll/src/core/RO.ts", "../../locomotive-scroll/src/index.ts"],
  "sourcesContent": ["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    function next() {\r\n        while (env.stack.length) {\r\n            var rec = env.stack.pop();\r\n            try {\r\n                var result = rec.dispose && rec.dispose.call(rec.value);\r\n                if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n};\r\n", "// Clamp a value between a minimum and maximum value\r\nexport function clamp(min, input, max) {\r\n  return Math.max(min, Math.min(input, max))\r\n}\r\n\r\n// Truncate a floating-point number to a specified number of decimal places\r\nexport function truncate(value, decimals = 0) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n\r\n// Linearly interpolate between two values using an amount (0 <= t <= 1)\r\nexport function lerp(x, y, t) {\r\n  return (1 - t) * x + t * y\r\n}\r\n\r\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\r\nexport function damp(x, y, lambda, dt) {\r\n  return lerp(x, y, 1 - Math.exp(-lambda * dt))\r\n}\r\n\r\n// Calculate the modulo of the dividend and divisor while keeping the result within the same sign as the divisor\r\n// https://anguscroll.com/just/just-modulo\r\nexport function modulo(n, d) {\r\n  return ((n % d) + d) % d\r\n}\r\n", "import { clamp, damp } from './maths'\r\n\r\n// Animate class to handle value animations with lerping or easing\r\nexport class Animate {\r\n  // Advance the animation by the given delta time\r\n  advance(deltaTime) {\r\n    if (!this.isRunning) return\r\n\r\n    let completed = false\r\n\r\n    if (this.lerp) {\r\n      this.value = damp(this.value, this.to, this.lerp * 60, deltaTime)\r\n      if (Math.round(this.value) === this.to) {\r\n        this.value = this.to\r\n        completed = true\r\n      }\r\n    } else {\r\n      this.currentTime += deltaTime\r\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\r\n\r\n      completed = linearProgress >= 1\r\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\r\n      this.value = this.from + (this.to - this.from) * easedProgress\r\n    }\r\n\r\n    if (completed) {\r\n      this.stop()\r\n    }\r\n\r\n    // Call the onUpdate callback with the current value and completed status\r\n    this.onUpdate?.(this.value, completed)\r\n  }\r\n\r\n  // Stop the animation\r\n  stop() {\r\n    this.isRunning = false\r\n  }\r\n\r\n  // Set up the animation from a starting value to an ending value\r\n  // with optional parameters for lerping, duration, easing, and onUpdate callback\r\n  fromTo(\r\n    from,\r\n    to,\r\n    { lerp = 0.1, duration = 1, easing = (t) => t, onStart, onUpdate }\r\n  ) {\r\n    this.from = this.value = from\r\n    this.to = to\r\n    this.lerp = lerp\r\n    this.duration = duration\r\n    this.easing = easing\r\n    this.currentTime = 0\r\n    this.isRunning = true\r\n\r\n    onStart?.()\r\n    this.onUpdate = onUpdate\r\n  }\r\n}\r\n", "import { debounce } from './debounce'\r\n\r\nexport class Dimensions {\r\n  constructor({\r\n    wrapper,\r\n    content,\r\n    autoResize = true,\r\n    debounce: debounceValue = 250,\r\n  } = {}) {\r\n    this.wrapper = wrapper\r\n    this.content = content\r\n\r\n    if (autoResize) {\r\n      this.debouncedResize = debounce(this.resize, debounceValue)\r\n\r\n      if (this.wrapper === window) {\r\n        window.addEventListener('resize', this.debouncedResize, false)\r\n      } else {\r\n        this.wrapperResizeObserver = new ResizeObserver(this.debouncedResize)\r\n        this.wrapperResizeObserver.observe(this.wrapper)\r\n      }\r\n\r\n      this.contentResizeObserver = new ResizeObserver(this.debouncedResize)\r\n      this.contentResizeObserver.observe(this.content)\r\n    }\r\n\r\n    this.resize()\r\n  }\r\n\r\n  destroy() {\r\n    this.wrapperResizeObserver?.disconnect()\r\n    this.contentResizeObserver?.disconnect()\r\n    window.removeEventListener('resize', this.debouncedResize, false)\r\n  }\r\n\r\n  resize = () => {\r\n    this.onWrapperResize()\r\n    this.onContentResize()\r\n  }\r\n\r\n  onWrapperResize = () => {\r\n    if (this.wrapper === window) {\r\n      this.width = window.innerWidth\r\n      this.height = window.innerHeight\r\n    } else {\r\n      this.width = this.wrapper.clientWidth\r\n      this.height = this.wrapper.clientHeight\r\n    }\r\n  }\r\n\r\n  onContentResize = () => {\r\n    if (this.wrapper === window) {\r\n      this.scrollHeight = this.content.scrollHeight\r\n      this.scrollWidth = this.content.scrollWidth\r\n    } else {\r\n      this.scrollHeight = this.wrapper.scrollHeight\r\n      this.scrollWidth = this.wrapper.scrollWidth\r\n    }\r\n  }\r\n\r\n  get limit() {\r\n    return {\r\n      x: this.scrollWidth - this.width,\r\n      y: this.scrollHeight - this.height,\r\n    }\r\n  }\r\n}\r\n", "export function debounce(callback, delay) {\r\n  let timer\r\n  return function () {\r\n    let args = arguments\r\n    let context = this\r\n    clearTimeout(timer)\r\n    timer = setTimeout(function () {\r\n      callback.apply(context, args)\r\n    }, delay)\r\n  }\r\n}\r\n", "export class Emitter {\r\n  constructor() {\r\n    this.events = {}\r\n  }\r\n\r\n  emit(event, ...args) {\r\n    let callbacks = this.events[event] || []\r\n    for (let i = 0, length = callbacks.length; i < length; i++) {\r\n      callbacks[i](...args)\r\n    }\r\n  }\r\n\r\n  on(event, cb) {\r\n    // Add the callback to the event's callback list, or create a new list with the callback\r\n    this.events[event]?.push(cb) || (this.events[event] = [cb])\r\n\r\n    // Return an unsubscribe function\r\n    return () => {\r\n      this.events[event] = this.events[event]?.filter((i) => cb !== i)\r\n    }\r\n  }\r\n\r\n  off(event, callback) {\r\n    this.events[event] = this.events[event]?.filter((i) => callback !== i)\r\n  }\r\n\r\n  destroy() {\r\n    this.events = {}\r\n  }\r\n}\r\n", "import { Emitter } from './emitter'\r\n\r\nconst LINE_HEIGHT = 100 / 6\r\n\r\nexport class VirtualScroll {\r\n  constructor(element, { wheelMultiplier = 1, touchMultiplier = 1 }) {\r\n    this.element = element\r\n    this.wheelMultiplier = wheelMultiplier\r\n    this.touchMultiplier = touchMultiplier\r\n\r\n    this.touchStart = {\r\n      x: null,\r\n      y: null,\r\n    }\r\n\r\n    this.emitter = new Emitter()\r\n    window.addEventListener('resize', this.onWindowResize, false)\r\n    this.onWindowResize()\r\n\r\n    this.element.addEventListener('wheel', this.onWheel, { passive: false })\r\n    this.element.addEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchend', this.onTouchEnd, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  // Add an event listener for the given event and callback\r\n  on(event, callback) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  // Remove all event listeners and clean up\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    window.removeEventListener('resize', this.onWindowResize, false)\r\n\r\n    this.element.removeEventListener('wheel', this.onWheel, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchend', this.onTouchEnd, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'touchstart' event\r\n  onTouchStart = (event) => {\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: 0,\r\n      y: 0,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      deltaX: 0,\r\n      deltaY: 0,\r\n      event,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'touchmove' event\r\n  onTouchMove = (event) => {\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    const deltaX = -(clientX - this.touchStart.x) * this.touchMultiplier\r\n    const deltaY = -(clientY - this.touchStart.y) * this.touchMultiplier\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: deltaX,\r\n      y: deltaY,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      deltaX,\r\n      deltaY,\r\n      event,\r\n    })\r\n  }\r\n\r\n  onTouchEnd = (event) => {\r\n    this.emitter.emit('scroll', {\r\n      deltaX: this.lastDelta.x,\r\n      deltaY: this.lastDelta.y,\r\n      event,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'wheel' event\r\n  onWheel = (event) => {\r\n    let { deltaX, deltaY, deltaMode } = event\r\n\r\n    const multiplierX =\r\n      deltaMode === 1 ? LINE_HEIGHT : deltaMode === 2 ? this.windowWidth : 1\r\n    const multiplierY =\r\n      deltaMode === 1 ? LINE_HEIGHT : deltaMode === 2 ? this.windowHeight : 1\r\n\r\n    deltaX *= multiplierX\r\n    deltaY *= multiplierY\r\n\r\n    deltaX *= this.wheelMultiplier\r\n    deltaY *= this.wheelMultiplier\r\n\r\n    this.emitter.emit('scroll', { deltaX, deltaY, event })\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    this.windowWidth = window.innerWidth\r\n    this.windowHeight = window.innerHeight\r\n  }\r\n}\r\n", "import { version } from '../../../package.json'\r\nimport { Animate } from './animate'\r\nimport { Dimensions } from './dimensions'\r\nimport { Emitter } from './emitter'\r\nimport { clamp, modulo } from './maths'\r\nimport { VirtualScroll } from './virtual-scroll'\r\n\r\n// Technical explanation\r\n// - listen to 'wheel' events\r\n// - prevent 'wheel' event to prevent scroll\r\n// - normalize wheel delta\r\n// - add delta to targetScroll\r\n// - animate scroll to targetScroll (smooth context)\r\n// - if animation is not running, listen to 'scroll' events (native context)\r\n\r\ntype EasingFunction = (t: number) => number\r\ntype Orientation = 'vertical' | 'horizontal'\r\ntype GestureOrientation = 'vertical' | 'horizontal' | 'both'\r\n\r\nexport type LenisOptions = {\r\n  wrapper?: Window | HTMLElement\r\n  content?: HTMLElement\r\n  wheelEventsTarget?: Window | HTMLElement\r\n  eventsTarget?: Window | HTMLElement\r\n  smoothWheel?: boolean\r\n  syncTouch?: boolean\r\n  syncTouchLerp?: number\r\n  touchInertiaMultiplier?: number\r\n  duration?: number\r\n  easing?: EasingFunction\r\n  lerp?: number\r\n  infinite?: boolean\r\n  orientation?: Orientation\r\n  gestureOrientation?: GestureOrientation\r\n  touchMultiplier?: number\r\n  wheelMultiplier?: number\r\n  autoResize?: boolean\r\n  __experimental__naiveDimensions?: boolean\r\n}\r\n\r\nexport default class Lenis {\r\n  __isSmooth: boolean = false // true if scroll should be animated\r\n  __isScrolling: boolean = false // true when scroll is animating\r\n  __isStopped: boolean = false // true if user should not be able to scroll - enable/disable programmatically\r\n  __isLocked: boolean = false // same as isStopped but enabled/disabled when scroll reaches target\r\n\r\n  constructor({\r\n    wrapper = window,\r\n    content = document.documentElement,\r\n    wheelEventsTarget = wrapper, // deprecated\r\n    eventsTarget = wheelEventsTarget,\r\n    smoothWheel = true,\r\n    syncTouch = false,\r\n    syncTouchLerp = 0.075,\r\n    touchInertiaMultiplier = 35,\r\n    duration, // in seconds\r\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\r\n    lerp = !duration && 0.1,\r\n    infinite = false,\r\n    orientation = 'vertical', // vertical, horizontal\r\n    gestureOrientation = 'vertical', // vertical, horizontal, both\r\n    touchMultiplier = 1,\r\n    wheelMultiplier = 1,\r\n    autoResize = true,\r\n    __experimental__naiveDimensions = false,\r\n  }: LenisOptions = {}) {\r\n    window.lenisVersion = version\r\n\r\n    // if wrapper is html or body, fallback to window\r\n    if (wrapper === document.documentElement || wrapper === document.body) {\r\n      wrapper = window\r\n    }\r\n\r\n    this.options = {\r\n      wrapper,\r\n      content,\r\n      wheelEventsTarget,\r\n      eventsTarget,\r\n      smoothWheel,\r\n      syncTouch,\r\n      syncTouchLerp,\r\n      touchInertiaMultiplier,\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      infinite,\r\n      gestureOrientation,\r\n      orientation,\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      autoResize,\r\n      __experimental__naiveDimensions,\r\n    }\r\n\r\n    this.animate = new Animate()\r\n    this.emitter = new Emitter()\r\n    this.dimensions = new Dimensions({ wrapper, content, autoResize })\r\n    this.toggleClassName('lenis', true)\r\n\r\n    this.velocity = 0\r\n    this.isLocked = false\r\n    this.isStopped = false\r\n    this.isSmooth = syncTouch || smoothWheel\r\n    this.isScrolling = false\r\n    this.targetScroll = this.animatedScroll = this.actualScroll\r\n\r\n    this.options.wrapper.addEventListener('scroll', this.onNativeScroll, false)\r\n\r\n    this.virtualScroll = new VirtualScroll(eventsTarget, {\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n    })\r\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\r\n  }\r\n\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    this.options.wrapper.removeEventListener(\r\n      'scroll',\r\n      this.onNativeScroll,\r\n      false\r\n    )\r\n\r\n    this.virtualScroll.destroy()\r\n    this.dimensions.destroy()\r\n\r\n    this.toggleClassName('lenis', false)\r\n    this.toggleClassName('lenis-smooth', false)\r\n    this.toggleClassName('lenis-scrolling', false)\r\n    this.toggleClassName('lenis-stopped', false)\r\n    this.toggleClassName('lenis-locked', false)\r\n  }\r\n\r\n  on(event: string, callback: Function) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  off(event: string, callback: Function) {\r\n    return this.emitter.off(event, callback)\r\n  }\r\n\r\n  private setScroll(scroll) {\r\n    // apply scroll value immediately\r\n    if (this.isHorizontal) {\r\n      this.rootElement.scrollLeft = scroll\r\n    } else {\r\n      this.rootElement.scrollTop = scroll\r\n    }\r\n  }\r\n\r\n  private onVirtualScroll = ({ deltaX, deltaY, event }) => {\r\n    // keep zoom feature\r\n    if (event.ctrlKey) return\r\n\r\n    const isTouch = event.type.includes('touch')\r\n    const isWheel = event.type.includes('wheel')\r\n\r\n    const isTapToStop =\r\n      this.options.syncTouch &&\r\n      isTouch &&\r\n      event.type === 'touchstart' &&\r\n      !this.isStopped &&\r\n      !this.isLocked\r\n\r\n    if (isTapToStop) {\r\n      this.reset()\r\n      return\r\n    }\r\n\r\n    const isClick = deltaX === 0 && deltaY === 0 // click event\r\n\r\n    // const isPullToRefresh =\r\n    //   this.options.gestureOrientation === 'vertical' &&\r\n    //   this.scroll === 0 &&\r\n    //   !this.options.infinite &&\r\n    //   deltaY <= 5 // touch pull to refresh, not reliable yet\r\n\r\n    const isUnknownGesture =\r\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) ||\r\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0)\r\n\r\n    if (isClick || isUnknownGesture) {\r\n      // console.log('prevent')\r\n      return\r\n    }\r\n\r\n    // catch if scrolling on nested scroll elements\r\n    let composedPath = event.composedPath()\r\n    composedPath = composedPath.slice(0, composedPath.indexOf(this.rootElement)) // remove parents elements\r\n\r\n    if (\r\n      !!composedPath.find(\r\n        (node) =>\r\n          node.hasAttribute?.('data-lenis-prevent') ||\r\n          (isTouch && node.hasAttribute?.('data-lenis-prevent-touch')) ||\r\n          (isWheel && node.hasAttribute?.('data-lenis-prevent-wheel')) ||\r\n          (node.classList?.contains('lenis') &&\r\n            !node.classList?.contains('lenis-stopped')) // nested lenis instance\r\n      )\r\n    )\r\n      return\r\n\r\n    if (this.isStopped || this.isLocked) {\r\n      event.preventDefault() // this will stop forwarding the event to the parent, this is problematic\r\n      return\r\n    }\r\n\r\n    this.isSmooth =\r\n      (this.options.syncTouch && isTouch) ||\r\n      (this.options.smoothWheel && isWheel)\r\n\r\n    if (!this.isSmooth) {\r\n      this.isScrolling = false\r\n      this.animate.stop()\r\n      return\r\n    }\r\n\r\n    event.preventDefault()\r\n\r\n    let delta = deltaY\r\n    if (this.options.gestureOrientation === 'both') {\r\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\r\n    } else if (this.options.gestureOrientation === 'horizontal') {\r\n      delta = deltaX\r\n    }\r\n\r\n    const syncTouch = isTouch && this.options.syncTouch\r\n    const isTouchEnd = isTouch && event.type === 'touchend'\r\n\r\n    const hasTouchInertia = isTouchEnd && Math.abs(delta) > 5\r\n\r\n    if (hasTouchInertia) {\r\n      delta = this.velocity * this.options.touchInertiaMultiplier\r\n    }\r\n\r\n    this.scrollTo(this.targetScroll + delta, {\r\n      programmatic: false,\r\n      ...(syncTouch\r\n        ? {\r\n            lerp: hasTouchInertia ? this.options.syncTouchLerp : 1,\r\n          }\r\n        : {\r\n            lerp: this.options.lerp,\r\n            duration: this.options.duration,\r\n            easing: this.options.easing,\r\n          }),\r\n    })\r\n  }\r\n\r\n  resize() {\r\n    this.dimensions.resize()\r\n  }\r\n\r\n  private emit() {\r\n    this.emitter.emit('scroll', this)\r\n  }\r\n\r\n  private onNativeScroll = () => {\r\n    if (this.__preventNextScrollEvent) return\r\n\r\n    if (!this.isScrolling) {\r\n      const lastScroll = this.animatedScroll\r\n      this.animatedScroll = this.targetScroll = this.actualScroll\r\n      this.velocity = 0\r\n      this.direction = Math.sign(this.animatedScroll - lastScroll)\r\n      this.emit()\r\n    }\r\n  }\r\n\r\n  private reset() {\r\n    this.isLocked = false\r\n    this.isScrolling = false\r\n    this.animatedScroll = this.targetScroll = this.actualScroll\r\n    this.velocity = 0\r\n    this.animate.stop()\r\n  }\r\n\r\n  start() {\r\n    if (!this.isStopped) return\r\n    this.isStopped = false\r\n\r\n    this.reset()\r\n  }\r\n\r\n  stop() {\r\n    if (this.isStopped) return\r\n    this.isStopped = true\r\n    this.animate.stop()\r\n\r\n    this.reset()\r\n  }\r\n\r\n  raf(time: number) {\r\n    const deltaTime = time - (this.time || time)\r\n    this.time = time\r\n\r\n    this.animate.advance(deltaTime * 0.001)\r\n  }\r\n\r\n  scrollTo(\r\n    target: number | string | HTMLElement,\r\n    {\r\n      offset = 0,\r\n      immediate = false,\r\n      lock = false,\r\n      duration = this.options.duration,\r\n      easing = this.options.easing,\r\n      lerp = !duration && this.options.lerp,\r\n      onComplete,\r\n      force = false, // scroll even if stopped\r\n      programmatic = true, // called from outside of the class\r\n    }: {\r\n      offset?: number\r\n      immediate?: boolean\r\n      lock?: boolean\r\n      duration?: number\r\n      easing?: EasingFunction\r\n      lerp?: number\r\n      onComplete?: (lenis: Lenis) => void\r\n      force?: boolean\r\n      programmatic?: boolean\r\n    } = {}\r\n  ) {\r\n    if ((this.isStopped || this.isLocked) && !force) return\r\n\r\n    // keywords\r\n    if (['top', 'left', 'start'].includes(target)) {\r\n      target = 0\r\n    } else if (['bottom', 'right', 'end'].includes(target)) {\r\n      target = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      }\r\n\r\n      if (node) {\r\n        if (this.options.wrapper !== window) {\r\n          // nested scroll offset correction\r\n          const wrapperRect = this.options.wrapper.getBoundingClientRect()\r\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\r\n        }\r\n\r\n        const rect = node.getBoundingClientRect()\r\n\r\n        target =\r\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\r\n      }\r\n    }\r\n\r\n    if (typeof target !== 'number') return\r\n\r\n    target += offset\r\n    target = Math.round(target)\r\n\r\n    if (this.options.infinite) {\r\n      if (programmatic) {\r\n        this.targetScroll = this.animatedScroll = this.scroll\r\n      }\r\n    } else {\r\n      target = clamp(0, target, this.limit)\r\n    }\r\n\r\n    if (immediate) {\r\n      this.animatedScroll = this.targetScroll = target\r\n      this.setScroll(this.scroll)\r\n      this.reset()\r\n      onComplete?.(this)\r\n      return\r\n    }\r\n\r\n    if (!programmatic) {\r\n      if (target === this.targetScroll) return\r\n\r\n      this.targetScroll = target\r\n    }\r\n\r\n    this.animate.fromTo(this.animatedScroll, target, {\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      onStart: () => {\r\n        // started\r\n        if (lock) this.isLocked = true\r\n        this.isScrolling = true\r\n      },\r\n      onUpdate: (value: number, completed: boolean) => {\r\n        this.isScrolling = true\r\n\r\n        // updated\r\n        this.velocity = value - this.animatedScroll\r\n        this.direction = Math.sign(this.velocity)\r\n\r\n        this.animatedScroll = value\r\n        this.setScroll(this.scroll)\r\n\r\n        if (programmatic) {\r\n          // wheel during programmatic should stop it\r\n          this.targetScroll = value\r\n        }\r\n\r\n        if (!completed) this.emit()\r\n\r\n        if (completed) {\r\n          this.reset()\r\n          this.emit()\r\n          onComplete?.(this)\r\n\r\n          // avoid emitting event twice\r\n          this.__preventNextScrollEvent = true\r\n          requestAnimationFrame(() => {\r\n            delete this.__preventNextScrollEvent\r\n          })\r\n        }\r\n      },\r\n    })\r\n  }\r\n\r\n  get rootElement() {\r\n    return this.options.wrapper === window\r\n      ? document.documentElement\r\n      : this.options.wrapper\r\n  }\r\n\r\n  get limit() {\r\n    if (this.options.__experimental__naiveDimensions) {\r\n      if (this.isHorizontal) {\r\n        return this.rootElement.scrollWidth - this.rootElement.clientWidth\r\n      } else {\r\n        return this.rootElement.scrollHeight - this.rootElement.clientHeight\r\n      }\r\n    } else {\r\n      return this.dimensions.limit[this.isHorizontal ? 'x' : 'y']\r\n    }\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.options.orientation === 'horizontal'\r\n  }\r\n\r\n  get actualScroll() {\r\n    // value browser takes into account\r\n    return this.isHorizontal\r\n      ? this.rootElement.scrollLeft\r\n      : this.rootElement.scrollTop\r\n  }\r\n\r\n  get scroll() {\r\n    return this.options.infinite\r\n      ? modulo(this.animatedScroll, this.limit)\r\n      : this.animatedScroll\r\n  }\r\n\r\n  get progress() {\r\n    // avoid progress to be NaN\r\n    return this.limit === 0 ? 1 : this.scroll / this.limit\r\n  }\r\n\r\n  get isSmooth() {\r\n    return this.__isSmooth\r\n  }\r\n\r\n  private set isSmooth(value: boolean) {\r\n    if (this.__isSmooth !== value) {\r\n      this.__isSmooth = value\r\n      this.toggleClassName('lenis-smooth', value)\r\n    }\r\n  }\r\n\r\n  get isScrolling() {\r\n    return this.__isScrolling\r\n  }\r\n\r\n  private set isScrolling(value: boolean) {\r\n    if (this.__isScrolling !== value) {\r\n      this.__isScrolling = value\r\n      this.toggleClassName('lenis-scrolling', value)\r\n    }\r\n  }\r\n\r\n  get isStopped() {\r\n    return this.__isStopped\r\n  }\r\n\r\n  private set isStopped(value: boolean) {\r\n    if (this.__isStopped !== value) {\r\n      this.__isStopped = value\r\n      this.toggleClassName('lenis-stopped', value)\r\n    }\r\n  }\r\n\r\n  get isLocked() {\r\n    return this.__isLocked\r\n  }\r\n\r\n  private set isLocked(value: boolean) {\r\n    if (this.__isLocked !== value) {\r\n      this.__isLocked = value\r\n      this.toggleClassName('lenis-locked', value)\r\n    }\r\n  }\r\n\r\n  get className() {\r\n    let className = 'lenis'\r\n    if (this.isStopped) className += ' lenis-stopped'\r\n    if (this.isLocked) className += ' lenis-locked'\r\n    if (this.isScrolling) className += ' lenis-scrolling'\r\n    if (this.isSmooth) className += ' lenis-smooth'\r\n    return className\r\n  }\r\n\r\n  private toggleClassName(name: string, value: boolean) {\r\n    this.rootElement.classList.toggle(name, value)\r\n    this.emitter.emit('className change', this)\r\n  }\r\n}\r\n", "/**\n * Intersection Observer\n *\n * Detecting visibility of an element in the viewport.\n *\n * Features functions to:\n *\n * - Trigger inview/outOfView callbacks\n * - If the element has a requestAnimationFrame dependency, set interactivy status for the ScrollElement Class\n *\n * References:\n *\n * - {@link https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API}\n */\n\nimport { IIOOptions } from '../types';\nimport ScrollElement from './ScrollElement';\n\nexport default class IO {\n    public scrollElements: ScrollElement[];\n    private rootMargin: string;\n    private IORaf: boolean;\n    private observer!: IntersectionObserver;\n\n    constructor({\n        scrollElements,\n        rootMargin = '-1px -1px -1px -1px',\n        IORaf,\n    }: IIOOptions) {\n        // Parameters\n        this.scrollElements = scrollElements;\n        this.rootMargin = rootMargin;\n        this.IORaf = IORaf;\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize Intersection Observer.\n     *\n     * @private\n     */\n    private _init() {\n        // Options\n        const observerOptions = {\n            rootMargin: this.rootMargin,\n        };\n\n        // Callback\n        const onIntersect = (entries: IntersectionObserverEntry[]) => {\n            entries.forEach((entry) => {\n                const $targetItem: ScrollElement | undefined =\n                    this.scrollElements.find(\n                        (item) => item.$el === entry.target\n                    );\n\n                if (entry.isIntersecting) {\n                    $targetItem && ($targetItem.isAlreadyIntersected = true);\n                    this._setInview(entry);\n                } else if ($targetItem && $targetItem.isAlreadyIntersected) {\n                    this._setOutOfView(entry);\n                }\n            });\n        };\n\n        // Instance\n        this.observer = new IntersectionObserver(onIntersect, observerOptions);\n\n        // Observe each default elements\n        for (const scrollElement of this.scrollElements) {\n            const $scrollElement = scrollElement.$el;\n            this.observe($scrollElement);\n        }\n    }\n\n    /**\n     * Lifecyle - Destroy Intersection Observer.\n     */\n    public destroy() {\n        this.observer.disconnect();\n    }\n\n    /**\n     * Subscribe element to the Intersection Observer.\n     *\n     * @param {HTMLElement} $scrollElement - DOM Element to observe.\n     */\n    public observe($scrollElement: HTMLElement) {\n        if (!$scrollElement) {\n            return;\n        }\n\n        this.observer.observe($scrollElement);\n    }\n\n    /**\n     * Unsubscribe element to the Intersection Observer.\n     *\n     * @param {HTMLElement} $scrollElement - DOM Element to unobserve.\n     */\n    public unobserve($scrollElement: HTMLElement) {\n        if (!$scrollElement) {\n            return;\n        }\n\n        this.observer.unobserve($scrollElement);\n    }\n\n    /**\n     * Find ScrollElementReference instance and trigger inview callbacks.\n     *\n     * @private\n     *\n     * @param {IntersectionObserverEntry} entry - DOM Element to observe.\n     */\n    private _setInview(entry: IntersectionObserverEntry) {\n        const scrollElement = this.scrollElements.find(\n            (scrollElement) => scrollElement.$el === entry.target\n        );\n\n        this.IORaf && scrollElement?.setInteractivityOn();\n        !this.IORaf && scrollElement?.setInview();\n    }\n\n    /**\n     * Find ScrollElementReference instance and trigger out of view callbacks.\n     *\n     * @private\n     *\n     * @param {IntersectionObserverEntry} entry - DOM Element to observe.\n     */\n    private _setOutOfView(entry: IntersectionObserverEntry) {\n        const scrollElement = this.scrollElements.find(\n            (scrollElement) => scrollElement.$el === entry.target\n        );\n\n        this.IORaf && scrollElement?.setInteractivityOff();\n        !this.IORaf && scrollElement?.setOutOfView();\n\n        // Unobserve if element doesn't have repeat attribute\n        if (!scrollElement?.attributes.scrollRepeat && !this.IORaf) {\n            this.unobserve(entry.target as HTMLElement);\n        }\n    }\n}\n", "// https://greensock.com/docs/v3/GSAP/gsap.utils\n\n/**\n * Clamp a value to fit within a specific range (ex: clamp(0, 100, -12) --> 0).\n *\n * @param {number} min   - Minimum value expected.\n * @param {number} max   - Maximum value expected.\n * @param {number} value - Current value.\n *\n * @returns {number} - Clamped value.\n */\nexport function clamp(min: number, max: number, value: number): number {\n    return value < min ? min : value > max ? max : value;\n}\n\n/**\n * Map one range to another (ex: mapRange(-10, 10, 0, 100, 5) --> 75).\n *\n * @param {number} inMin  - Current minimum value.\n * @param {number} inMax  - Current maximum value.\n * @param {number} outMin - Maximum value expected.\n * @param {number} outMax - Maximum value expected.\n * @param {number} value  - Current value.\n *\n * @returns {number} - New value that should be between minimum value expected and maximum value.\n */\nexport function mapRange(\n    inMin: number,\n    inMax: number,\n    outMin: number,\n    outMax: number,\n    value: number\n): number {\n    const inRange = inMax - inMin;\n    const outRange = outMax - outMin;\n    return outMin + (((value - inMin) / inRange) * outRange || 0);\n}\n\n/**\n * Map a number within a range to a progress between 0 to 1 (ex: normalize(100, 200, 150) --> 0.5).\n *\n * @param {number} min   - Current minimum value.\n * @param {number} max   - Current maximum value.\n * @param {number} value - Current value.\n *\n * @returns {number} - New value that should be between 0 and 1.\n */\nexport function normalize(min: number, max: number, value: number): number {\n    return mapRange(min, max, 0, 1, value);\n}\n\n/**\n * Get closest number from an array.\n *\n * @param {number[]} array  - Numbers array.\n * @param {number}   target - Reference value.\n *\n * @returns {number} - Closest number.\n */\nexport function closestNumber(array: number[], target: number): number {\n    return array.reduce((prev, curr) => {\n        return Math.abs(curr - target) < Math.abs(prev - target) ? curr : prev;\n    });\n}\n", "/**\n * Scroll Element\n *\n * Give tools to compute element progress in the viewport and triggers callbacks to animate it.\n *\n * Features functions to:\n *\n * - scrollClass - Add a custom class when the element is intersected by the offset\n * - scrollOffset - Determine offsets to intersect the element\n * - scrollPosition - Determine the element positions to consider an element as intersected.\n * - scrollModuleProgress - Send scroll progress to modular module that have a specific method (PROGRESS_MODULAR_METHOD)\n * - scrollCssProgress - Add a specific css variable (PROGRESS_CSS_VAR) that store the scroll progress\n * - scrollEventProgress - Send scroll progress to custom event listeners.\n * - scrollSpeed - Add a scroll multiplicator to create a parallax effect\n * - scrollRepeat - Repeat the option to trigger animation each time the element is intersected\n * - scrollCall - Call a custom event or a modular callback when the element is intersected\n */\n\nimport {\n    IModular,\n    IScrollElementOptions,\n    IScrollElementAttributes,\n    IScrollElementIntersection,\n    IScrollElementMetrics,\n    IProgressModularModules,\n    IScrollElementCallbacksValues,\n    scrollCallWay,\n    scrollCallFrom,\n    scrollOrientation,\n} from '../types';\nimport { clamp, closestNumber, normalize, mapRange } from '../utils/maths';\n\n/** Constants */\nconst INVIEW_CLASS = 'is-inview';\nconst PROGRESS_CSS_VAR = '--progress';\nconst PROGRESS_MODULAR_METHOD = 'onScrollProgress';\n\nexport default class ScrollElement {\n    public $el: HTMLElement;\n    public id: number;\n    public needRaf: boolean;\n    public attributes: IScrollElementAttributes;\n    public scrollOrientation: scrollOrientation;\n    public isAlreadyIntersected: boolean;\n\n    private intersection: IScrollElementIntersection;\n    private metrics: IScrollElementMetrics;\n    private currentScroll: number;\n    private translateValue: number;\n    private progress: number;\n    private lastProgress: number | null;\n    private modularInstance?: IModular;\n    private progressModularModules: IProgressModularModules[];\n    private isInview: boolean;\n    private isInteractive: boolean;\n    private isInFold: boolean;\n    private isFirstResize: boolean;\n\n    private subscribeElementUpdateFn: (scrollElement: ScrollElement) => void;\n    private unsubscribeElementUpdateFn: (scrollElement: ScrollElement) => void;\n\n    constructor({\n        $el,\n        id,\n        modularInstance,\n        subscribeElementUpdateFn,\n        unsubscribeElementUpdateFn,\n        needRaf,\n        scrollOrientation,\n    }: IScrollElementOptions) {\n        // Scroll DOM element\n        this.$el = $el;\n        // Unique ID\n        this.id = id;\n        // RAF option\n        this.needRaf = needRaf;\n        // Scroll Direction\n        this.scrollOrientation = scrollOrientation;\n        // Modular.js\n        this.modularInstance = modularInstance;\n        // Parent's callbacks\n        this.subscribeElementUpdateFn = subscribeElementUpdateFn;\n        this.unsubscribeElementUpdateFn = unsubscribeElementUpdateFn;\n\n        // Attributes\n        this.attributes = {\n            scrollClass: this.$el.dataset['scrollClass'] ?? INVIEW_CLASS,\n            scrollOffset: this.$el.dataset['scrollOffset'] ?? '0,0',\n            scrollPosition: this.$el.dataset['scrollPosition'] ?? 'start,end',\n            scrollModuleProgress:\n                this.$el.dataset['scrollModuleProgress'] != null,\n            scrollCssProgress: this.$el.dataset['scrollCssProgress'] != null,\n            scrollEventProgress:\n                this.$el.dataset['scrollEventProgress'] ?? null,\n            scrollSpeed:\n                this.$el.dataset['scrollSpeed'] != null\n                    ? parseFloat(this.$el.dataset['scrollSpeed'])\n                    : null,\n            scrollRepeat: this.$el.dataset['scrollRepeat'] != null,\n            scrollCall: this.$el.dataset['scrollCall'] ?? null,\n            scrollCallSelf: this.$el.dataset['scrollCallSelf'] != null,\n            scrollIgnoreFold: this.$el.dataset['scrollIgnoreFold'] != null,\n            scrollEnableTouchSpeed:\n                this.$el.dataset['scrollEnableTouchSpeed'] != null,\n        };\n\n        // Limits\n        this.intersection = {\n            start: 0,\n            end: 0,\n        };\n\n        // Metrics\n        this.metrics = {\n            offsetStart: 0,\n            offsetEnd: 0,\n            bcr: {} as DOMRect,\n        };\n\n        // Scroll Values\n        this.currentScroll =\n            this.scrollOrientation === 'vertical'\n                ? window.scrollY\n                : window.scrollX;\n\n        // Parallax\n        this.translateValue = 0;\n\n        // Progress\n        this.progress = 0;\n        this.lastProgress = null;\n        this.progressModularModules = [];\n\n        // Inview\n        this.isInview = false;\n        this.isInteractive = false;\n        this.isAlreadyIntersected = false;\n        this.isInFold = false;\n        this.isFirstResize = true;\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize progress tracking.\n     *\n     * @private\n     */\n    private _init() {\n        if (!this.needRaf) {\n            return;\n        }\n\n        // Prepare modules progress\n        if (this.modularInstance && this.attributes.scrollModuleProgress) {\n            this._getProgressModularModules();\n        }\n\n        // First resize to compute all values\n        this._resize();\n    }\n\n    /**\n     * Callback - Resize callback\n     */\n    public onResize({ currentScroll }: IScrollElementCallbacksValues) {\n        this.currentScroll = currentScroll;\n        this._resize();\n    }\n\n    /**\n     * Callback - RAF callback\n     */\n    public onRender({ currentScroll, smooth }: IScrollElementCallbacksValues) {\n        const wSize =\n            this.scrollOrientation === 'vertical'\n                ? window.innerHeight\n                : window.innerWidth;\n        this.currentScroll = currentScroll;\n        this._computeProgress();\n\n        // Parallax\n        if (\n            this.attributes.scrollSpeed &&\n            !isNaN(this.attributes.scrollSpeed)\n        ) {\n            // if touch detected or smooth disabled\n            if (!this.attributes.scrollEnableTouchSpeed && !smooth) {\n                if (this.translateValue) {\n                    this.$el.style.transform = `translate3d(0, 0, 0)`;\n                }\n                this.translateValue = 0;\n\n                // if mousewheel or smooth enabled\n            } else {\n                // Check fold condition\n                if (this.isInFold) {\n                    const progress = Math.max(0, this.progress);\n                    this.translateValue =\n                        progress * wSize * this.attributes.scrollSpeed * -1;\n                } else {\n                    const progress = mapRange(0, 1, -1, 1, this.progress);\n                    this.translateValue =\n                        progress * wSize * this.attributes.scrollSpeed * -1;\n                }\n\n                this.$el.style.transform =\n                    this.scrollOrientation === 'vertical'\n                        ? `translate3d(0, ${this.translateValue}px, 0)`\n                        : `translate3d(${this.translateValue}px, 0, 0)`;\n            }\n        }\n    }\n\n    /**\n     * Inview callback\n     */\n    public setInview() {\n        if (this.isInview) {\n            return;\n        }\n\n        this.isInview = true;\n        this.$el.classList.add(this.attributes.scrollClass);\n\n        const way: scrollCallWay = 'enter';\n        const from: scrollCallFrom = this._getScrollCallFrom();\n        this.attributes.scrollCall && this._dispatchCall(way, from);\n    }\n\n    /**\n     * Out of view callback\n     */\n    public setOutOfView() {\n        if (!(this.isInview && this.attributes.scrollRepeat)) {\n            return;\n        }\n\n        this.isInview = false;\n        this.$el.classList.remove(this.attributes.scrollClass);\n\n        const way: scrollCallWay = 'leave';\n        const from: scrollCallFrom = this._getScrollCallFrom();\n        this.attributes.scrollCall && this._dispatchCall(way, from);\n    }\n\n    /**\n     * Switch interactivity on to subscribe the instance to the RAF\n     * and start calculations.\n     */\n    public setInteractivityOn() {\n        if (this.isInteractive) {\n            return;\n        }\n\n        this.isInteractive = true;\n        this.subscribeElementUpdateFn(this);\n    }\n\n    /**\n     * Switch interactivity off to unsubscribe the instance to the RAF\n     * and stop calculations.\n     */\n    public setInteractivityOff() {\n        if (!this.isInteractive) {\n            return;\n        }\n\n        this.isInteractive = false;\n        this.unsubscribeElementUpdateFn(this);\n\n        // Force progress to progress limit when the element is out\n        this.lastProgress != null &&\n            this._computeProgress(closestNumber([0, 1], this.lastProgress));\n    }\n\n    /**\n     * Resize method that compute the element's values.\n     *\n     * @private\n     */\n    private _resize() {\n        this.metrics.bcr = this.$el.getBoundingClientRect();\n        this._computeMetrics();\n        this._computeIntersection();\n\n        // First resize logic\n        if (this.isFirstResize) {\n            this.isFirstResize = false;\n            // Dispatch default call if the element is in fold.\n            if (this.isInFold) {\n                this.setInview();\n            }\n        }\n    }\n\n    /**\n     * Compute element's offsets and determine if the element is in fold.\n     *\n     * @private\n     */\n    private _computeMetrics() {\n        const { top, left, height, width } = this.metrics.bcr;\n        const wSize =\n            this.scrollOrientation === 'vertical'\n                ? window.innerHeight\n                : window.innerWidth;\n        const metricsStart = this.scrollOrientation === 'vertical' ? top : left;\n        const metricsSize =\n            this.scrollOrientation === 'vertical' ? height : width;\n\n        this.metrics.offsetStart =\n            this.currentScroll + metricsStart - this.translateValue;\n        this.metrics.offsetEnd = this.metrics.offsetStart + metricsSize;\n\n        if (\n            this.metrics.offsetStart < wSize &&\n            !this.attributes.scrollIgnoreFold\n        ) {\n            this.isInFold = true;\n        } else {\n            this.isInFold = false;\n        }\n    }\n\n    /**\n     * Compute intersection values depending on the context.\n     *\n     * @private\n     */\n    private _computeIntersection() {\n        // Window size\n        const wSize =\n            this.scrollOrientation === 'vertical'\n                ? window.innerHeight\n                : window.innerWidth;\n\n        // Metrics size\n        const metricsSize =\n            this.scrollOrientation === 'vertical'\n                ? this.metrics.bcr.height\n                : this.metrics.bcr.width;\n\n        // Offset\n        const offset = this.attributes.scrollOffset.split(',');\n        const offsetStart = offset[0] != undefined ? offset[0].trim() : '0';\n        const offsetEnd = offset[1] != undefined ? offset[1].trim() : '0';\n\n        // Positions\n        const scrollPosition = this.attributes.scrollPosition.split(',');\n        let scrollPositionStart =\n            scrollPosition[0] != undefined ? scrollPosition[0].trim() : 'start';\n        const scrollPositionEnd =\n            scrollPosition[1] != undefined ? scrollPosition[1].trim() : 'end';\n\n        // Viewport\n        const viewportStart = offsetStart.includes('%')\n            ? wSize * parseInt(offsetStart.replace('%', '').trim()) * 0.01\n            : parseInt(offsetStart);\n        const viewportEnd = offsetEnd.includes('%')\n            ? wSize * parseInt(offsetEnd.replace('%', '').trim()) * 0.01\n            : parseInt(offsetEnd);\n\n        // Fold exception\n        if (this.isInFold) {\n            scrollPositionStart = 'fold';\n        }\n\n        // Define Intersection Start\n        switch (scrollPositionStart) {\n            case 'start':\n                this.intersection.start =\n                    this.metrics.offsetStart - wSize + viewportStart;\n                break;\n\n            case 'middle':\n                this.intersection.start =\n                    this.metrics.offsetStart -\n                    wSize +\n                    viewportStart +\n                    metricsSize * 0.5;\n                break;\n\n            case 'end':\n                this.intersection.start =\n                    this.metrics.offsetStart -\n                    wSize +\n                    viewportStart +\n                    metricsSize;\n                break;\n\n            case 'fold':\n                this.intersection.start = 0;\n                break;\n\n            default:\n                this.intersection.start =\n                    this.metrics.offsetStart - wSize + viewportStart;\n                break;\n        }\n\n        // Define Intersection End\n        switch (scrollPositionEnd) {\n            case 'start':\n                this.intersection.end = this.metrics.offsetStart - viewportEnd;\n                break;\n\n            case 'middle':\n                this.intersection.end =\n                    this.metrics.offsetStart - viewportEnd + metricsSize * 0.5;\n                break;\n\n            case 'end':\n                this.intersection.end =\n                    this.metrics.offsetStart - viewportEnd + metricsSize;\n                break;\n\n            default:\n                this.intersection.end =\n                    this.metrics.offsetStart - viewportEnd + metricsSize;\n                break;\n        }\n\n        // Avoid to have the end < the start intersection >\n        if (this.intersection.end <= this.intersection.start) {\n            switch (scrollPositionEnd) {\n                case 'start':\n                    this.intersection.end = this.intersection.start + 1;\n                    break;\n\n                case 'middle':\n                    this.intersection.end =\n                        this.intersection.start + metricsSize * 0.5;\n                    break;\n\n                case 'end':\n                    this.intersection.end =\n                        this.intersection.start + metricsSize;\n                    break;\n\n                default:\n                    this.intersection.end = this.intersection.start + 1;\n                    break;\n            }\n        }\n    }\n\n    /**\n     * Compute the scroll progress of the element depending\n     * on its intersection values.\n     *\n     * @private\n     *\n     * @param {number} [forcedProgress] - Value to force progress.\n     */\n    private _computeProgress(forcedProgress?: number) {\n        // Progress\n        const progress =\n            forcedProgress ??\n            clamp(\n                0,\n                1,\n                normalize(\n                    this.intersection.start,\n                    this.intersection.end,\n                    this.currentScroll\n                )\n            );\n\n        this.progress = progress;\n\n        if (progress != this.lastProgress) {\n            this.lastProgress = progress;\n\n            // Set the element's progress to the css variable\n            this.attributes.scrollCssProgress && this._setCssProgress(progress);\n\n            // Set the element's progress to the custom event listeners\n            this.attributes.scrollEventProgress &&\n                this._setCustomEventProgress(progress);\n\n            // Set the element's progress to inline modules\n            if (this.attributes.scrollModuleProgress) {\n                for (const modularModules of this.progressModularModules) {\n                    this.modularInstance &&\n                        this.modularInstance.call(\n                            PROGRESS_MODULAR_METHOD,\n                            progress,\n                            modularModules.moduleName,\n                            modularModules.moduleId\n                        );\n                }\n            }\n\n            // Logic to trigger the inview/out of view callbacks\n            progress > 0 && progress < 1 && this.setInview();\n            progress === 0 && this.setOutOfView();\n            progress === 1 && this.setOutOfView();\n        }\n    }\n\n    /**\n     * Set the element's progress to a specific css variable.\n     *\n     * @private\n     *\n     * @param {number} [currentProgress] - Progress value.\n     */\n    _setCssProgress(currentProgress = 0) {\n        this.$el.style.setProperty(\n            PROGRESS_CSS_VAR,\n            currentProgress.toString()\n        );\n    }\n\n    /**\n     * Set the element's progress to the custom event listeners.\n     *\n     * @private\n     *\n     * @param {number} [currentProgress] - Progress value.\n     */\n    _setCustomEventProgress(currentProgress = 0) {\n        const customEventName = this.attributes.scrollEventProgress;\n\n        if (!customEventName) return;\n\n        const customEvent = new CustomEvent(customEventName, {\n            detail: {\n                target: this.$el,\n                progress: currentProgress,\n            },\n        });\n        window.dispatchEvent(customEvent);\n    }\n\n    /**\n     * Get modular modules that can listen the element's progress.\n     *\n     * @private\n     */\n    _getProgressModularModules() {\n        if (!this.modularInstance) {\n            return;\n        }\n\n        const modulesIdNames = Object.keys(this.$el.dataset).filter((key) =>\n            key.includes('module')\n        );\n        const modules: any[] = Object.entries(this.modularInstance.modules);\n\n        if (!modulesIdNames.length) {\n            return;\n        }\n\n        for (const modulesIdName of modulesIdNames) {\n            const moduleId = this.$el.dataset[modulesIdName];\n\n            if (!moduleId) {\n                return;\n            }\n\n            for (const module of modules) {\n                const [moduleName, moduleObj] = module;\n\n                if (moduleId in moduleObj) {\n                    this.progressModularModules.push({\n                        moduleName,\n                        moduleId,\n                    });\n                }\n            }\n        }\n    }\n\n    /**\n     * Function to get scroll call from.\n     *\n     * @private\n     */\n    _getScrollCallFrom(): scrollCallFrom {\n        const closestIntersectionValue = closestNumber(\n            [this.intersection.start, this.intersection.end],\n            this.currentScroll\n        );\n        return this.intersection.start === closestIntersectionValue\n            ? 'start'\n            : 'end';\n    }\n\n    /**\n     * Function to dispatch a custom event or call a modular callback.\n     *\n     * @private\n     *\n     * @param {scrollCallWay} way - Enter or leave.\n     * @param {scrollCallFrom} from - Start or end.\n     */\n    _dispatchCall(way: scrollCallWay, from: scrollCallFrom) {\n        const callParameters = this.attributes.scrollCall?.split(',');\n        const callSelf = this.attributes?.scrollCallSelf;\n\n        if (callParameters && callParameters.length > 1) {\n            // Using Modular.js (https://github.com/modularorg/modularjs)\n            const [func, moduleName, moduleId] = callParameters;\n            let targetModuleId;\n\n            // If the module is set on the scroll element\n            if (callSelf) {\n                targetModuleId = this.$el.dataset[`module${moduleName.trim()}`];\n            } else {\n                targetModuleId = moduleId;\n            }\n\n            this.modularInstance &&\n                this.modularInstance.call(\n                    func.trim(),\n                    {\n                        target: this.$el,\n                        way,\n                        from,\n                    },\n                    moduleName.trim(),\n                    targetModuleId?.trim()\n                );\n        } else if (callParameters) {\n            // Using CustomEvent API (https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent)\n            const [customEventName] = callParameters;\n            const customEvent = new CustomEvent(customEventName, {\n                detail: {\n                    target: this.$el,\n                    way,\n                    from,\n                },\n            });\n            window.dispatchEvent(customEvent);\n        }\n    }\n}\n", "/**\n * Integrates Lenis with Locomotive's built-in animation system\n */\n\nimport {\n    CoreOptions,\n    IModular,\n    IScrollElementCallbacksValues,\n    scrollOrientation,\n} from '../types';\nimport IO from './IO';\nimport ScrollElement from './ScrollElement';\n\n/** Defined attributes that need a requestAnimationFrame */\nconst ATTRIBUTES_THAT_NEED_RAF = [\n    'scrollOffset',\n    'scrollPosition',\n    'scrollModuleProgress',\n    'scrollCssProgress',\n    'scrollEventProgress',\n    'scrollSpeed',\n];\n\n/** Default root margins */\nconst TRIGGER_ROOT_MARGIN = '-1px -1px -1px -1px';\nconst RAF_ROOT_MARGIN = '100% 100% 100% 100%'; // Add 100vh top/bottom && 100vw left/right to use a biggest value with data-scroll-speed\n\nexport default class Core {\n    private $scrollContainer!: HTMLElement;\n    private modularInstance?: IModular;\n    private triggerRootMargin!: string;\n    private rafRootMargin!: string;\n    private scrollElements!: ScrollElement[];\n    private triggeredScrollElements!: ScrollElement[];\n    private RAFScrollElements!: ScrollElement[];\n    private scrollElementsToUpdate!: ScrollElement[];\n    private IOTriggerInstance!: IO;\n    private IORafInstance!: IO;\n    private scrollOrientation!: scrollOrientation;\n\n    constructor({\n        $el,\n        modularInstance,\n        triggerRootMargin,\n        rafRootMargin,\n        scrollOrientation,\n    }: CoreOptions) {\n        if (!$el) {\n            console.error('Please provide a DOM Element as scrollContainer');\n            return;\n        }\n\n        // Scroll container\n        this.$scrollContainer = $el;\n\n        // Modular.js\n        this.modularInstance = modularInstance;\n\n        // Scroll Direction\n        this.scrollOrientation = scrollOrientation;\n\n        // IO Margins\n        this.triggerRootMargin = triggerRootMargin ?? TRIGGER_ROOT_MARGIN;\n        this.rafRootMargin = rafRootMargin ?? RAF_ROOT_MARGIN;\n\n        // ScrollElements arrays\n        this.scrollElements = [];\n        this.triggeredScrollElements = [];\n        this.RAFScrollElements = [];\n        this.scrollElementsToUpdate = [];\n\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize the core.\n     *\n     * @private\n     */\n    private _init() {\n        const $scrollElements =\n            this.$scrollContainer.querySelectorAll('[data-scroll]');\n\n        const $scrollElementsArr = Array.from($scrollElements) as HTMLElement[]\n        this._subscribeScrollElements($scrollElementsArr);\n\n        // Trigger IO\n        this.IOTriggerInstance = new IO({\n            scrollElements: [...this.triggeredScrollElements],\n            rootMargin: this.triggerRootMargin,\n            IORaf: false,\n        });\n\n        // Raf IO\n        this.IORafInstance = new IO({\n            scrollElements: [...this.RAFScrollElements],\n            rootMargin: this.rafRootMargin,\n            IORaf: true,\n        });\n    }\n\n    /**\n     * Lifecyle - Destroy core.\n     */\n    public destroy() {\n        this.IOTriggerInstance.destroy();\n        this.IORafInstance.destroy();\n        this._unsubscribeAllScrollElements();\n    }\n\n    /**\n     * Callback - Resize callback.\n     */\n    onResize({ currentScroll }: IScrollElementCallbacksValues) {\n        for (const scrollElement of this.RAFScrollElements) {\n            scrollElement.onResize({\n                currentScroll,\n            } as IScrollElementCallbacksValues);\n        }\n    }\n\n    /**\n     * Callback - RAF callback.\n     */\n    onRender({ currentScroll, smooth }: IScrollElementCallbacksValues) {\n        for (const scrollElement of this.scrollElementsToUpdate) {\n            scrollElement.onRender({\n                currentScroll,\n                smooth,\n            } as IScrollElementCallbacksValues);\n        }\n    }\n\n    /**\n     * Remove items from lists of scroll elements and compute all new values.\n     *\n     * @param {HTMLElement} $oldContainer - HTMLElement that contains data-scroll elements to unsubscribe\n     */\n    removeScrollElements($oldContainer: HTMLElement) {\n        const $scrollElementsToRemove =\n            $oldContainer.querySelectorAll('[data-scroll]');\n\n        if (!$scrollElementsToRemove.length) return;\n\n        // 1. Remove from IO\n        for (let index = 0; index < this.triggeredScrollElements.length; index++) {\n            const scrollElement = this.triggeredScrollElements[index];\n            const $scrollElementsToRemoveArr = Array.from($scrollElementsToRemove) as HTMLElement []\n            if ($scrollElementsToRemoveArr.indexOf(scrollElement.$el) > -1) {\n                this.IOTriggerInstance.unobserve(scrollElement.$el);\n                this.triggeredScrollElements.splice(index, 1);\n            }\n        }\n\n        for (let index = 0; index < this.RAFScrollElements.length; index++) {\n            const scrollElement = this.RAFScrollElements[index];\n            const $scrollElementsToRemoveArr = Array.from($scrollElementsToRemove) as HTMLElement []\n            if ($scrollElementsToRemoveArr.indexOf(scrollElement.$el) > -1) {\n                this.IORafInstance.unobserve(scrollElement.$el);\n                this.RAFScrollElements.splice(index, 1);\n            }\n        }\n\n        // 2. Remove from scrollElementsToUpdate[] and scrollElements[]\n        $scrollElementsToRemove.forEach(($scrollElement) => {\n            const targetScrollElementToUpdate =\n                this.scrollElementsToUpdate.find(\n                    (scrollElement) => scrollElement.$el === $scrollElement\n                );\n            const targetScrollElement = this.scrollElements.find(\n                (scrollElement) => scrollElement.$el === $scrollElement\n            );\n\n            if (targetScrollElementToUpdate) {\n                this._unsubscribeElementUpdate(targetScrollElementToUpdate);\n            }\n            if (targetScrollElement) {\n                this.scrollElements = this.scrollElements.filter(\n                    (scrollElementItem) =>\n                        scrollElementItem.id != targetScrollElement.id\n                );\n            }\n        });\n    }\n\n    /**\n     * Add items to lists of scroll elements and compute all new values.\n     *\n     * @param {HTMLElement} $newContainer - HTMLElement that contains data-scroll elements to subscribe\n     */\n    addScrollElements($newContainer: HTMLElement) {\n        // 3. Rebuild ScrollElements\n        const $scrollElements = $newContainer.querySelectorAll('[data-scroll]');\n\n        // 4. Get max scrollElement.id\n        const ids: number[] = [];\n        this.scrollElements.forEach((scrollElement) => {\n            ids.push(scrollElement.id);\n        });\n        const maxID = Math.max(...ids);\n        const fromIndex = maxID + 1;\n        const $scrollElementsArr = Array.from($scrollElements) as HTMLElement[]\n        this._subscribeScrollElements(\n            $scrollElementsArr,\n            fromIndex,\n            true\n        );\n    }\n\n    /**\n     * Create a ScrollElement instance for each elements with\n     * `data-scroll` attribute.\n     *\n     * @private\n     *\n     * @param {HTMLElement[]} $scrollElements - List of elements that need\n     *     to be regarded.\n     */\n    _subscribeScrollElements(\n        $scrollElements: HTMLElement[],\n        fromIndex = 0,\n        toObserve = false\n    ) {\n        // For each scroll element create a ScrollElement instance\n        for (let index = 0; index < $scrollElements.length; index++) {\n            const $scrollElement = $scrollElements[index];\n            const needRaf = this._checkRafNeeded($scrollElement);\n\n            const scrollElementInstance = new ScrollElement({\n                $el: $scrollElement,\n                id: fromIndex + index,\n                scrollOrientation: this.scrollOrientation,\n                modularInstance: this.modularInstance,\n                subscribeElementUpdateFn:\n                    this._subscribeElementUpdate.bind(this),\n                unsubscribeElementUpdateFn:\n                    this._unsubscribeElementUpdate.bind(this),\n                needRaf,\n            });\n\n            // Push to common array\n            this.scrollElements.push(scrollElementInstance);\n\n            // Push to specific array\n            if (needRaf) {\n                this.RAFScrollElements.push(scrollElementInstance);\n\n                // Dynamic observe item\n                if (toObserve) {\n                    this.IORafInstance.scrollElements.push(\n                        scrollElementInstance\n                    );\n                    this.IORafInstance.observe(scrollElementInstance.$el);\n                }\n            } else {\n                this.triggeredScrollElements.push(scrollElementInstance);\n\n                // Dynamic observe item\n                if (toObserve) {\n                    this.IOTriggerInstance.scrollElements.push(\n                        scrollElementInstance\n                    );\n                    this.IOTriggerInstance.observe(scrollElementInstance.$el);\n                }\n            }\n        }\n    }\n\n    /**\n     * Clear all ScrollElement arrays.\n     *\n     * @private\n     */\n    _unsubscribeAllScrollElements() {\n        this.scrollElements = [];\n        this.RAFScrollElements = [];\n        this.triggeredScrollElements = [];\n        this.scrollElementsToUpdate = [];\n    }\n\n    /**\n     * Subscribe ScrollElement instance that needs to be updated.\n     *\n     * @private\n     *\n     * @param {ScrollElement} scrollElement - ScrollElement instance inview\n     *     that needs to be updated.\n     */\n    _subscribeElementUpdate(scrollElement: ScrollElement) {\n        this.scrollElementsToUpdate.push(scrollElement);\n    }\n\n    /**\n     * Unscribe ScrollElement instance that doesn't need to be updated.\n     *\n     * @private\n     *\n     * @param {ScrollElement} scrollElement - The updated ScrollElement instance\n     *     out of view now.\n     */\n    _unsubscribeElementUpdate(scrollElement: ScrollElement) {\n        this.scrollElementsToUpdate = this.scrollElementsToUpdate.filter(\n            (scrollElementToUpdate) =>\n                scrollElementToUpdate.id != scrollElement.id\n        );\n    }\n\n    /**\n     * Check if a DOM Element need a requestAnimationFrame to be used.\n     *\n     * @private\n     *\n     * @param {HTMLElement} $scrollElement - The element that needs to be checked.\n     *\n     * @returns {boolean}\n     */\n    _checkRafNeeded($scrollElement: HTMLElement) {\n        let attributesThatNeedRaf = [...ATTRIBUTES_THAT_NEED_RAF];\n\n        // Remove utils\n        const removeAttribute = (attributeToRemove: string) => {\n            attributesThatNeedRaf = attributesThatNeedRaf.filter(\n                (attribute) => attribute != attributeToRemove\n            );\n        };\n\n        // 1. Check scroll offset values\n        if ($scrollElement.dataset.scrollOffset) {\n            const value = $scrollElement.dataset.scrollOffset\n                .split(',')\n                .map((test) => test.replace('%', '').trim())\n                .join(',');\n            if (value != '0,0') {\n                return true;\n            } else {\n                removeAttribute('scrollOffset');\n            }\n        } else {\n            removeAttribute('scrollOffset');\n        }\n\n        // 2. Check scroll position values\n        if ($scrollElement.dataset.scrollPosition) {\n            const value = $scrollElement.dataset.scrollPosition.trim();\n            if (value != 'top,bottom') {\n                return true;\n            } else {\n                removeAttribute('scrollPosition');\n            }\n        } else {\n            removeAttribute('scrollPosition');\n        }\n\n        // 3. Check scroll speed values\n        if (\n            $scrollElement.dataset.scrollSpeed &&\n            !isNaN(parseFloat($scrollElement.dataset.scrollSpeed))\n        ) {\n            return true;\n        } else {\n            removeAttribute('scrollSpeed');\n        }\n\n        // 4. Check others attributes\n        for (const attribute of attributesThatNeedRaf) {\n            if (attribute in $scrollElement.dataset) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n", "/**\n * Resize Observer\n *\n * The Resize Observer API provides a performant mechanism by which code can monitor an element for changes to its size,\n * with notifications being delivered to the observer each time the size changes.\n *\n * Features functions to:\n *\n * - Trigger the resize callback if the specified element's size change.\n *\n * References:\n *\n * - {@link https://developer.mozilla.org/en-US/docs/Web/API/Resize_Observer_API}\n */\n\nimport { IROOptions } from '../types';\n\nexport default class RO {\n    private $resizeElements: HTMLElement[];\n    private isFirstObserve: boolean;\n    private observer!: ResizeObserver;\n    private resizeCallback: () => void;\n\n    constructor({ resizeElements, resizeCallback = () => {} }: IROOptions) {\n        // Parameters\n        this.$resizeElements = resizeElements;\n        this.resizeCallback = resizeCallback;\n\n        // Flags\n        this.isFirstObserve = true;\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize Resize Observer.\n     *\n     * @private\n     */\n    private _init() {\n        // Callback\n        const onResize = (entries: ResizeObserverEntry[]) => {\n            !this.isFirstObserve && this.resizeCallback?.();\n            this.isFirstObserve = false;\n        };\n\n        // Instance\n        this.observer = new ResizeObserver(onResize);\n\n        // Observe each default elements\n        for (const $resizeElement of this.$resizeElements) {\n            this.observer.observe($resizeElement);\n        }\n    }\n\n    /**\n     * Lifecyle - Destroy Resize Observer.\n     */\n    public destroy() {\n        this.observer.disconnect();\n    }\n}\n", "//@ts-ignore\nimport Lenis from 'lenis';\nimport Core from './core/Core';\nimport RO from './core/RO';\nimport {\n    ILenisScrollToOptions,\n    ILenisScrollValues,\n    ILocomotiveScrollOptions,\n    IModular,\n    lenisTargetScrollTo,\n} from './types';\nimport type { LenisOptions } from 'lenis';\n\n/**\n * @type {LenisOptions}\n */\nconst defaultLenisOptions: LenisOptions = {\n    wrapper: window,\n    content: document.documentElement,\n    wheelEventsTarget: window,\n    eventsTarget: window,\n    smoothWheel: true,\n    syncTouch: false,\n    syncTouchLerp: 0.075,\n    touchInertiaMultiplier: 35,\n    duration: 0.75,\n    easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)), // https://www.desmos.com/calculator/brs54l4xou\n    lerp: 0.1,\n    infinite: false,\n    orientation: 'vertical',\n    gestureOrientation: 'vertical',\n    touchMultiplier: 1,\n    wheelMultiplier: 1,\n    autoResize: true\n};\n\n/**\n * Locomotive Scroll\n *\n * Detection of elements in viewport & smooth scrolling with parallax.\n *\n * Inspired by\n * {@link https://github.com/locomotivemtl/locomotive-scroll locomotive-scroll.js}\n * and built around\n * {@link https://github.com/darkroomengineering/lenis lenis.js}.\n */\n\nexport default class LocomotiveScroll {\n    public rafPlaying: boolean;\n\n    private lenisInstance: any;\n    private coreInstance: any;\n\n    private lenisOptions: LenisOptions;\n    private modularInstance?: IModular;\n    private triggerRootMargin?: string;\n    private rafRootMargin?: string;\n    private rafInstance?: any;\n    private autoResize?: boolean;\n    private autoStart?: boolean;\n    private ROInstance?: RO;\n    private scrollCallback?(scrollValues: ILenisScrollValues): void;\n    private initCustomTicker?: (render: () => void) => void;\n    private destroyCustomTicker?: (render: () => void) => void;\n    private _onRenderBind: () => void;\n    private _onResizeBind: () => void;\n    private _onScrollToBind: (event: MouseEvent) => void;\n\n    constructor({\n        lenisOptions = {},\n        modularInstance,\n        triggerRootMargin,\n        rafRootMargin,\n        autoResize = true,\n        autoStart = true,\n        scrollCallback = () => {},\n        initCustomTicker,\n        destroyCustomTicker,\n    }: ILocomotiveScrollOptions = {}) {\n        // Arguments\n        this.lenisOptions = { ...defaultLenisOptions, ...lenisOptions };\n\n        Object.assign(this, {\n            lenisOptions,\n            modularInstance,\n            triggerRootMargin,\n            rafRootMargin,\n            autoResize,\n            autoStart,\n            scrollCallback,\n            initCustomTicker,\n            destroyCustomTicker,\n        });\n\n        // Binding\n        this._onRenderBind = this._onRender.bind(this);\n        this._onScrollToBind = this._onScrollTo.bind(this);\n        this._onResizeBind = this._onResize.bind(this);\n\n        // Data\n        this.rafPlaying = false;\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize instance.\n     *\n     * @private\n     */\n    private _init(): void {\n        // Create Lenis instance\n        this.lenisInstance = new Lenis({\n            wrapper: this.lenisOptions.wrapper,\n            content: this.lenisOptions.content,\n            eventsTarget: this.lenisOptions.eventsTarget,\n            lerp: this.lenisOptions.lerp,\n            duration: this.lenisOptions.duration,\n            orientation: this.lenisOptions.orientation,\n            gestureOrientation: this.lenisOptions.gestureOrientation,\n            smoothWheel: this.lenisOptions.smoothWheel,\n            syncTouch: this.lenisOptions.syncTouch,\n            syncTouchLerp: this.lenisOptions.syncTouchLerp,\n            touchInertiaMultiplier: this.lenisOptions.touchInertiaMultiplier,\n            wheelMultiplier: this.lenisOptions.wheelMultiplier,\n            touchMultiplier: this.lenisOptions.touchMultiplier,\n            easing: this.lenisOptions.easing,\n        });\n        this.lenisInstance?.on('scroll', this.scrollCallback);\n\n        // Add scroll direction attribute on body\n        document.documentElement.setAttribute(\n            'data-scroll-orientation',\n            this.lenisInstance.options.orientation\n        );\n\n        requestAnimationFrame(() => {\n            // Create Core Instance\n            this.coreInstance = new Core({\n                $el: this.lenisInstance.rootElement,\n                modularInstance: this.modularInstance,\n                triggerRootMargin: this.triggerRootMargin,\n                rafRootMargin: this.rafRootMargin,\n                scrollOrientation: this.lenisInstance.options.orientation,\n            });\n\n            // Bind Events\n            this._bindEvents();\n\n            // RAF warning\n            if (this.initCustomTicker && !this.destroyCustomTicker) {\n                console.warn(\n                    'initCustomTicker callback is declared, but destroyCustomTicker is not. Please pay attention. It could cause trouble.'\n                );\n            } else if (!this.initCustomTicker && this.destroyCustomTicker) {\n                console.warn(\n                    'destroyCustomTicker callback is declared, but initCustomTicker is not. Please pay attention. It could cause trouble.'\n                );\n            }\n\n            // Start RAF\n            this.autoStart && this.start();\n        });\n    }\n\n    /**\n     * Lifecyle - Destroy instance.\n     */\n    public destroy(): void {\n        // Stop raf\n        this.stop();\n        // Unbind Events\n        this._unbindEvents();\n        // Destroy Lenis\n        this.lenisInstance.destroy();\n        // Destroy Core\n        this.coreInstance?.destroy();\n\n        // Ensure a delay before destroying to handle cases of instant destruction\n        requestAnimationFrame(() => {\n            this.coreInstance?.destroy();\n        });\n    }\n\n    /**\n     * Events - Subscribe events to listen.\n     */\n    private _bindEvents() {\n        this._bindScrollToEvents();\n\n        if (this.autoResize) {\n            if ('ResizeObserver' in window) {\n                this.ROInstance = new RO({\n                    resizeElements: [document.body],\n                    resizeCallback: this._onResizeBind,\n                });\n            } else {\n                (window as any).addEventListener('resize', this._onResizeBind);\n            }\n        }\n    }\n\n    /**\n     * Events - Unsubscribe listened events.\n     */\n    private _unbindEvents() {\n        this._unbindScrollToEvents();\n\n        if (this.autoResize) {\n            if ('ResizeObserver' in window) {\n                this.ROInstance && this.ROInstance.destroy();\n            } else {\n                (window as any).removeEventListener(\n                    'resize',\n                    this._onResizeBind\n                );\n            }\n        }\n    }\n\n    /**\n     * Events - Subscribe scrollTo events to listen.\n     */\n    private _bindScrollToEvents($container?: HTMLElement) {\n        const $rootContainer = $container\n            ? $container\n            : this.lenisInstance.rootElement;\n        const $scrollToElements =\n            $rootContainer?.querySelectorAll('[data-scroll-to]');\n\n        $scrollToElements?.length &&\n            $scrollToElements.forEach(($el: HTMLElement): void => {\n                $el.addEventListener('click', this._onScrollToBind, false);\n            });\n    }\n\n    /**\n     * Events - Unsubscribe scrollTo listened events.\n     */\n    private _unbindScrollToEvents($container?: HTMLElement) {\n        const $rootContainer = $container\n            ? $container\n            : this.lenisInstance.rootElement;\n        const $scrollToElements =\n            $rootContainer?.querySelectorAll('[data-scroll-to]');\n        $scrollToElements?.length &&\n            $scrollToElements.forEach(($el: HTMLElement) => {\n                $el.removeEventListener('click', this._onScrollToBind, false);\n            });\n    }\n\n    /**\n     * Callback - Resize callback.\n     */\n    private _onResize() {\n        // Waiting the next frame to get the new current scroll value return by Lenis\n        requestAnimationFrame(() => {\n            this.coreInstance?.onResize({\n                currentScroll: this.lenisInstance.scroll,\n            });\n        });\n    }\n\n    /**\n     * Callback - Render callback.\n     */\n    private _onRender() {\n        this.lenisInstance?.raf(Date.now());\n\n        this.coreInstance?.onRender({\n            currentScroll: this.lenisInstance.scroll,\n            smooth: this.lenisInstance.isSmooth,\n        });\n    }\n\n    /**\n     * Callback - Scroll To callback.\n     */\n    private _onScrollTo(event: MouseEvent) {\n        event.preventDefault();\n        const $target = (event.currentTarget as HTMLElement) ?? null;\n        if (!$target) return;\n        const target =\n            $target.getAttribute('data-scroll-to-href') ||\n            $target.getAttribute('href');\n        const offset = $target.getAttribute('data-scroll-to-offset') || 0;\n        const duration =\n            $target.getAttribute('data-scroll-to-duration') ||\n            this.lenisOptions.duration ||\n            defaultLenisOptions.duration;\n\n        target &&\n            this.scrollTo(target, {\n                offset: typeof offset === 'string' ? parseInt(offset) : offset,\n                duration:\n                    typeof duration === 'string'\n                        ? parseInt(duration)\n                        : duration,\n            });\n    }\n\n    /**\n     * Start RequestAnimationFrame that active Lenis smooth and scroll progress.\n     */\n    public start(): void {\n        if (this.rafPlaying) {\n            return;\n        }\n\n        // Call lenis start method\n        this.lenisInstance?.start();\n\n        this.rafPlaying = true;\n        this.initCustomTicker\n            ? this.initCustomTicker(this._onRenderBind)\n            : this._raf();\n    }\n\n    /**\n     * Stop RequestAnimationFrame that active Lenis smooth and scroll progress.\n     */\n    public stop(): void {\n        if (!this.rafPlaying) {\n            return;\n        }\n\n        // Call lenis stop method\n        this.lenisInstance?.stop();\n\n        this.rafPlaying = false;\n        this.destroyCustomTicker\n            ? this.destroyCustomTicker(this._onRenderBind)\n            : this.rafInstance && cancelAnimationFrame(this.rafInstance);\n    }\n\n    /**\n     * Remove old scroll elements items and rebuild ScrollElements instances.\n     */\n    public removeScrollElements($oldContainer: HTMLElement): void {\n        if (!$oldContainer) {\n            console.error('Please provide a DOM Element as $oldContainer');\n            return;\n        }\n\n        this._unbindScrollToEvents($oldContainer);\n        this.coreInstance?.removeScrollElements($oldContainer);\n    }\n\n    /**\n     * Add new scroll elements items and rebuild ScrollElements instances.\n     */\n    public addScrollElements($newContainer: HTMLElement): void {\n        if (!$newContainer) {\n            console.error('Please provide a DOM Element as $newContainer');\n            return;\n        }\n\n        this.coreInstance?.addScrollElements($newContainer);\n        requestAnimationFrame(() => {\n            this._bindScrollToEvents($newContainer);\n        });\n    }\n\n    /**\n     * Trigger resize callback.\n     */\n    public resize(): void {\n        this._onResizeBind();\n    }\n\n    /**\n     * Trigger scroll to callback.\n     */\n    public scrollTo(\n        target: lenisTargetScrollTo,\n        options?: ILenisScrollToOptions\n    ): void {\n        this.lenisInstance?.scrollTo(target, {\n            offset: options?.offset,\n            lerp: options?.lerp,\n            duration: options?.duration,\n            immediate: options?.immediate,\n            lock: options?.lock,\n            force: options?.force,\n            easing: options?.easing,\n            onComplete: options?.onComplete,\n        });\n    }\n\n    /**\n     * RequestAnimationFrame that active Lenis smooth and scroll progress.\n     *\n     * @private\n     *\n     */\n    private _raf() {\n        this._onRenderBind();\n        this.rafInstance = requestAnimationFrame(() => this._raf());\n    }\n}\n"],
  "mappings": "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",
  "names": ["__assign", "Object", "assign", "t", "s", "i", "n", "arguments", "length", "p", "prototype", "hasOwnProperty", "call", "apply", "this", "clamp", "min", "input", "max", "Math", "Animate", "deltaTime", "this", "isRunning", "completed", "lerp", "value", "damp", "x", "y", "lambda", "dt", "t", "exp", "to", "round", "currentTime", "linearProgress", "duration", "easedProgress", "easing", "from", "stop", "onUpdate", "onStart", "Dimensions", "constructor", "wrapper", "content", "autoResize", "debounce", "debounceValue", "resize", "onWrapperResize", "onContentResize", "window", "width", "innerWidth", "height", "innerHeight", "clientWidth", "clientHeight", "scrollHeight", "scrollWidth", "debouncedResize", "callback", "delay", "timer", "args", "arguments", "context", "clearTimeout", "setTimeout", "apply", "addEventListener", "wrapperResizeObserver", "ResizeObserver", "observe", "contentResizeObserver", "destroy", "disconnect", "removeEventListener", "limit", "Emitter", "events", "event", "callbacks", "i", "length", "cb", "push", "_a", "filter", "LINE_HEIGHT", "VirtualScroll", "element", "wheelMultiplier", "touchMultiplier", "onTouchStart", "clientX", "clientY", "targetTouches", "touchStart", "lastDelta", "emitter", "emit", "deltaX", "deltaY", "onTouchMove", "onTouchEnd", "onWheel", "deltaMode", "windowWidth", "windowHeight", "onWindowResize", "passive", "on", "Lenis", "_b", "_c", "_d", "document", "documentElement", "_e", "wheelEventsTarget", "_f", "eventsTarget", "_g", "smoothWheel", "_h", "syncTouch", "_j", "syncTouchLerp", "_k", "touchInertiaMultiplier", "_l", "pow", "_m", "_o", "infinite", "_p", "orientation", "_q", "gestureOrientation", "_r", "_s", "_t", "_u", "__experimental__naiveDimensions", "_this", "__isSmooth", "__isScrolling", "__isStopped", "__isLocked", "onVirtualScroll", "ctrlKey", "isTouch", "type", "includes", "isWheel", "options", "isStopped", "isLocked", "reset", "isClick", "isUnknownGesture", "composedPath", "slice", "indexOf", "rootElement", "find", "node", "hasAttribute", "call", "r", "classList", "contains", "preventDefault", "isSmooth", "isScrolling", "animate", "delta", "abs", "hasTouchInertia", "velocity", "scrollTo", "targetScroll", "__assign", "programmatic", "onNativeScroll", "__preventNextScrollEvent", "lastScroll", "animatedScroll", "actualScroll", "direction", "sign", "lenisVersion", "body", "dimensions", "toggleClassName", "virtualScroll", "prototype", "off", "setScroll", "scroll", "isHorizontal", "scrollLeft", "scrollTop", "start", "raf", "time", "advance", "target", "offset", "immediate", "lock", "onComplete", "force", "querySelector", "nodeType", "wrapperRect", "getBoundingClientRect", "left", "top", "rect", "fromTo", "requestAnimationFrame", "Object", "defineProperty", "get", "modulo", "n", "d", "set", "className", "name", "toggle", "IO", "constructor", "scrollElements", "rootMargin", "IORaf", "this", "observer", "_init", "IntersectionObserver", "entries", "forEach", "entry", "$targetItem", "find", "item", "$el", "target", "isIntersecting", "isAlreadyIntersected", "_setInview", "_setOutOfView", "scrollElement", "observe", "destroy", "disconnect", "$scrollElement", "unobserve", "setInteractivityOn", "setInview", "setInteractivityOff", "setOutOfView", "attributes", "scrollRepeat", "mapRange", "inMin", "inMax", "outMin", "outMax", "value", "closestNumber", "array", "reduce", "prev", "curr", "Math", "abs", "ScrollElement", "id", "modularInstance", "subscribeElementUpdateFn", "unsubscribeElementUpdateFn", "needRaf", "scrollOrientation", "_this$$el$dataset$scr", "_this$$el$dataset$scr2", "_this$$el$dataset$scr3", "_this$$el$dataset$scr4", "_this$$el$dataset$scr5", "intersection", "metrics", "currentScroll", "translateValue", "progress", "lastProgress", "progressModularModules", "isInview", "isInteractive", "isInFold", "isFirstResize", "scrollClass", "dataset", "scrollOffset", "scrollPosition", "scrollModuleProgress", "scrollCssProgress", "scrollEventProgress", "scrollSpeed", "parseFloat", "scrollCall", "scrollCallSelf", "scrollIgnoreFold", "scrollEnableTouchSpeed", "start", "end", "offsetStart", "offsetEnd", "bcr", "window", "scrollY", "scrollX", "_getProgressModularModules", "_resize", "onResize", "onRender", "smooth", "wSize", "innerHeight", "innerWidth", "_computeProgress", "isNaN", "max", "style", "transform", "classList", "add", "from", "_getScrollCallFrom", "_dispatchCall", "remove", "getBoundingClientRect", "_computeMetrics", "_computeIntersection", "top", "left", "height", "width", "metricsSize", "offset", "split", "undefined", "trim", "scrollPositionStart", "scrollPositionEnd", "viewportStart", "includes", "parseInt", "replace", "viewportEnd", "forcedProgress", "_setCssProgress", "_setCustomEventProgress", "modularModules", "call", "moduleName", "moduleId", "currentProgress", "setProperty", "toString", "customEventName", "customEvent", "CustomEvent", "detail", "dispatchEvent", "modulesIdNames", "Object", "keys", "filter", "key", "modules", "length", "modulesIdName", "module", "moduleObj", "push", "closestIntersectionValue", "way", "_this$attributes$scro", "_this$attributes", "callParameters", "callSelf", "_targetModuleId", "func", "targetModuleId", "ATTRIBUTES_THAT_NEED_RAF", "Core", "triggerRootMargin", "rafRootMargin", "$scrollContainer", "triggeredScrollElements", "RAFScrollElements", "scrollElementsToUpdate", "IOTriggerInstance", "IORafInstance", "console", "error", "$scrollElements", "querySelectorAll", "$scrollElementsArr", "Array", "_subscribeScrollElements", "_unsubscribeAllScrollElements", "removeScrollElements", "$oldContainer", "$scrollElementsToRemove", "index", "indexOf", "splice", "targetScrollElementToUpdate", "targetScrollElement", "_unsubscribeElementUpdate", "scrollElementItem", "addScrollElements", "$newContainer", "ids", "fromIndex", "toObserve", "_checkRafNeeded", "scrollElementInstance", "_subscribeElementUpdate", "bind", "scrollElementToUpdate", "attributesThatNeedRaf", "removeAttribute", "attributeToRemove", "attribute", "map", "test", "join", "RO", "resizeElements", "resizeCallback", "$resizeElements", "isFirstObserve", "ResizeObserver", "_this$resizeCallback", "$resizeElement", "defaultLenisOptions", "wrapper", "content", "document", "documentElement", "wheelEventsTarget", "eventsTarget", "smoothWheel", "syncTouch", "syncTouchLerp", "touchInertiaMultiplier", "duration", "easing", "t", "min", "pow", "lerp", "infinite", "orientation", "gestureOrientation", "touchMultiplier", "wheelMultiplier", "autoResize", "LocomotiveScroll", "lenisOptions", "autoStart", "scrollCallback", "initCustomTicker", "destroyCustomTicker", "rafPlaying", "lenisInstance", "coreInstance", "rafInstance", "ROInstance", "_onRenderBind", "_onResizeBind", "_onScrollToBind", "_extends", "assign", "_onRender", "_onScrollTo", "_onResize", "_this$lenisInstance", "Lenis", "on", "setAttribute", "options", "requestAnimationFrame", "rootElement", "_bindEvents", "warn", "_this$coreInstance", "stop", "_unbindEvents", "_this$coreInstance2", "_bindScrollToEvents", "body", "addEventListener", "_unbindScrollToEvents", "removeEventListener", "$container", "$rootContainer", "$scrollToElements", "_this$coreInstance3", "scroll", "_this$lenisInstance2", "_this$coreInstance4", "raf", "Date", "now", "isSmooth", "event", "_event$currentTarget", "preventDefault", "$target", "currentTarget", "getAttribute", "scrollTo", "_this$lenisInstance3", "_raf", "_this$lenisInstance4", "cancelAnimationFrame", "_this$coreInstance5", "_this$coreInstance6", "resize", "_this$lenisInstance5", "immediate", "lock", "force", "onComplete"]
}
